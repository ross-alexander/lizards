(define (foldl func initial list)
  (if (null? list)
      initial
      (foldl func (func (car list) initial) (cdr list))))

(define (show-non-zero-num-list l1 l2)
  (if (null? l1)
      (list)
      (letrec (
	       (loop (lambda (a b c d)
		       (begin
			 (display 
			  (if (and (> (foldl + 0 a) 0) (> b 0))
			      (if (> (foldl + 0 c) 0)
				  ", "
				  " and ")
			      ""))
			 (if (not (= b 0))
			     (begin
			       (display b)
			       (display " ")
			       (display (car d))
			       )
			     )
			 (if (not (null? c))
			     (loop (append a (list b)) (car c) (cdr c) (cdr d))
			     )
			 ))))
	(loop (list) (car l1) (cdr l1) l2)
	)
      )
)
(define eval-loop (lambda (a)
		    (letrec (
			     (loop (lambda (x)
				     (if (not (null? x))
					 (begin
					   (eval (car x))
					   (loop (cdr x)))
					 ))))
		      (loop a))))

(define (header game turn id nplayers clans cont)
  (display "<HTML>\n")
  (display "<HEAD>\n")
  (display "</HEAD>\n")
  (display "<BODY>\n")
  (eval-loop cont)
  (display "</BODY>\n")
  (display "</HTML>\n")
  )
(define (world-phase)
  (display "<H1>World Phase (All Den Growth and Seattling)</H1>\n")
  )
(define (artillery-phase)
  (display "<H1>Artillery Phase (All Free, Lob and Chant orders)</H1>\n")
  )
(define (movement-phase)
  (display "<H1>Movemant Phase (All Move, Split, Sail and Sneak orders)</H1>\n"))
(define (development-phase)
  (display "<H1>Development Phase (All Build, Destroy and Recruit orders)</H1>\n"))

(define (home-den hex size type)
  (display "<LI> Home Den at hex ")
  (display hex)
  (display " with ")
  (display size)
  (display " ")
  (display type)
  (display (if (= size 1) " lizard." " lizards."))
  (display "\n")
)

(define (band hex red green grey black yellow hunger combat)
  (let (
	(band-list (list red green grey black yellow)))
    (begin
      (display "<LI> Band at hex ")
      (display hex)
      (display " containing ")
      (if (= (foldl + 0 band-list) 0)
	  (display "no")
	  (show-non-zero-num-list band-list
				  (list "Red" "Green" "Grey" "Black" "Yellow"))
	  )
      (if (= 1 (foldl + 0 band-list))
	  (display " lizard.")
	  (display " lizards.")
	  )
      (display "\n")
      )
    )
  )

(define (clan-report clan list)
  (display "<H1>Clan Report for Clan ")
  (display clan)
  (display "</H1>\n")
  (display "<UL>\n")
  (eval-loop list)
  (display "</UL>\n")
)

(define (victory-dens-continue total required current)
  (display "<P><CENTER>You currently control ")
  (display current)
  (display " home dens out of ")
  (display total)
  (display ".  You need to control ")
  (display required)
  (display " home dens to win.<CENTER></P>\n")
)

(define (clan-rank list victory)
  (display "<H1>Clan Rankings</H1>\n")
)

(define (trailer)
  (display "<HR>\n")
  (display "<CENTER>Circle Games 1999</CENTER>\n")
)